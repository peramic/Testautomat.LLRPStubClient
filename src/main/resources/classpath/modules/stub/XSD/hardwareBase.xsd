<?xml version="1.0" encoding="UTF-8"?>
<xs:schema targetNamespace="urn:havis:device:test:hardware:xsd:1"
	elementFormDefault="qualified" xmlns="urn:havis:device:test:hardware:xsd:1"
	xmlns:xs="http://www.w3.org/2001/XMLSchema" version="1.0">

	<xs:simpleType name="SchemaVersionType">
		<xs:annotation>
			<xs:documentation>
				The first part of the schema version is the major
				release. It is increased if changes to the schema are NOT backward
				compatible. The second part is the minor release. It is increased if
				changes to the schema are backward compatible.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="[0-9]+(\.[0-9]+)?" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="IdType">
		<xs:restriction base="xs:string">
			<xs:pattern value="[a-zA-Z0-9_]+" />
		</xs:restriction>
	</xs:simpleType>

	<!-- antennas -->

	<xs:group name="AntennaPropertiesElemGroup">
		<xs:sequence>
			<xs:element name="airProtocol" type="AirProtocolEnumeration" />
		</xs:sequence>
	</xs:group>

	<xs:attributeGroup name="AntennaPropertiesAttrGroup">
		<xs:attribute name="antennaId" type="AntennaIdType" use="required" />
	</xs:attributeGroup>

	<xs:simpleType name="AirProtocolEnumeration">
		<xs:restriction base="xs:string">
			<xs:enumeration value="EPCGlobalClass1Gen2" />
			<xs:enumeration value="UnspecifiedAirProtocol" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="AntennaIdType">
		<xs:restriction base="xs:int">
			<xs:minInclusive value="1" />
		</xs:restriction>
	</xs:simpleType>

	<xs:group name="AntennaTagPropertiesElemGroup">
		<xs:sequence>
			<xs:element name="peakRSSI" type="xs:int" minOccurs="0" />
			<xs:element name="error" type="ErrorType" minOccurs="0" />
		</xs:sequence>
	</xs:group>

	<xs:attributeGroup name="AntennaTagPropertiesAttrGroup">
		<xs:attribute name="tagId" type="IdType" use="required" />
	</xs:attributeGroup>

	<xs:complexType name="ErrorType">
		<xs:sequence>
			<xs:element name="type" type="ErrorTypeEnumeration" />
			<xs:element name="code" type="xs:string" />
			<xs:element name="description" type="xs:string" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>

	<xs:simpleType name="ErrorTypeEnumeration">
		<xs:restriction base="xs:string">
			<xs:enumeration value="AirInterface" />
			<xs:enumeration value="Access" />
		</xs:restriction>
	</xs:simpleType>

	<!-- tags -->

	<xs:group name="TagPropertiesElemGroup">
		<xs:sequence>
			<xs:element name="memoryBanks" type="MemoryBanksType">
				<xs:annotation>
					<xs:documentation>Defines existing memory banks. If a bank is not
						defined here then it does not exists.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="locks" type="LocksType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The locks for the tag. If this element is omitted
						then no lock exists.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="killed" type="xs:boolean" minOccurs="0"
				default="false" />
		</xs:sequence>
	</xs:group>

	<xs:attributeGroup name="TagPropertiesAttrGroup">
		<xs:attribute name="tagId" type="IdType" use="required">
			<xs:annotation>
				<xs:documentation>The tagId generated by the stub</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>

	<xs:complexType name="MemoryBanksType">
		<xs:sequence>
			<xs:element name="memoryBank" type="MemoryBankType"
				maxOccurs="4" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="MemoryBankType">
		<xs:sequence>
			<xs:element name="data" type="DataType">
				<xs:annotation>
					<xs:documentation>The data of the memory bank. The resulting bit
						count is the max. length of the bank.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="name" type="MemoryBankNameEnumeration"
			use="required" />
	</xs:complexType>

	<xs:complexType name="DataType">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="format" type="FieldFormatEnumeration"
					default="Hex" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<xs:simpleType name="FieldFormatEnumeration">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Hex" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="MemoryBankNameEnumeration">
		<xs:restriction base="xs:string">
			<xs:enumeration value="PwdBank" />
			<xs:enumeration value="EPCBank" />
			<xs:enumeration value="TIDBank" />
			<xs:enumeration value="UserBank" />
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="LocksType">
		<xs:sequence>
			<xs:element name="lock" type="LockType" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="LockType">
		<xs:sequence>
			<xs:element name="field" type="FieldType" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="FieldType">
		<xs:sequence>
			<xs:choice>
				<xs:element name="name" type="LockFieldNameEnumeration" />
				<xs:element name="range" type="RangeType" />
			</xs:choice>
			<xs:element name="locked" type="xs:boolean" minOccurs="0"
				default="true" />
			<xs:element name="permanent" type="xs:boolean"
				minOccurs="0" default="false" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="RangeType">
		<xs:sequence>
			<xs:element name="memoryBankName" type="MemoryBankNameEnumeration" />
			<xs:element name="from" type="xs:unsignedInt">
				<xs:annotation>
					<xs:documentation>start index (first bit has index 0)
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="to" type="xs:unsignedInt">
				<xs:annotation>
					<xs:documentation>end index (inclusive)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:simpleType name="LockFieldNameEnumeration">
		<xs:restriction base="xs:string">
			<xs:enumeration value="AccessPwd" />
			<xs:enumeration value="KillPwd" />
			<xs:enumeration value="EPCBank" />
			<xs:enumeration value="TIDBank" />
			<xs:enumeration value="UserBank" />
		</xs:restriction>
	</xs:simpleType>

	<!-- GPIOs -->

	<xs:group name="IOPropertiesElemGroup">
		<xs:sequence>
			<xs:element name="direction" type="IODirectionEnumeration" />
			<xs:element name="state" type="IOStateEnumeration" />
		</xs:sequence>
	</xs:group>

	<xs:attributeGroup name="IOPropertiesAttrGroup">
		<xs:attribute name="ioId" type="IOIdType" use="required" />
	</xs:attributeGroup>

	<xs:simpleType name="IODirectionEnumeration">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Input" />
			<xs:enumeration value="Output" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="IOStateEnumeration">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Low" />
			<xs:enumeration value="High" />
			<xs:enumeration value="Unknown" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="IOIdType">
		<xs:restriction base="xs:int">
			<xs:minExclusive value="1" />
		</xs:restriction>
	</xs:simpleType>

	<!-- subscribers -->

	<xs:group name="SubscriberPropertiesElemGroup">
		<xs:sequence>
			<xs:choice>
				<xs:element name="instance" type="SubscriberInstanceType">
					<xs:annotation>
						<xs:documentation>The relating Java instance is used by the Java
							API to fire events to the subscriber. It must implement the
							interface "HardwareSubscriber".
						</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="instanceProperties" type="SubscriberInstancePropertiesType">
					<xs:annotation>
						<xs:documentation>The REST API uses the Java API in background. It
							replaces the instance properties with an instance for the Java
							API and visa versa. When the Java instance is triggered by the
							Java API it sends the notifications to the subscriber.
						</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:element name="ios" type="SubscriberIOsType"
				minOccurs="0" />
		</xs:sequence>
	</xs:group>

	<xs:complexType name="SubscriberInstanceType">
		<xs:sequence>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="SubscriberInstancePropertiesType">
		<xs:sequence>
			<xs:element name="instanceProperty" type="SubscriberInstancePropertyType"
				maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>HTTP subscriber: "URL", "connectionTimeout" (in
						ms, default: 3000), "socketTimeout" (in ms, default: 3000). The
						notification is sent via HTTP POST and content type
						application/xml.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="SubscriberInstancePropertyType">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="key" type="xs:string" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<xs:complexType name="SubscriberIOsType">
		<xs:sequence>
			<xs:element name="io" type="SubscriberIOType"
				maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="SubscriberIOType">
		<xs:sequence>
			<xs:element name="stateChanged" type="xs:boolean"
				minOccurs="0" default="false" />
		</xs:sequence>
		<xs:attribute name="ioId" type="IOIdType" use="required" />
	</xs:complexType>

	<xs:attributeGroup name="SubscriberPropertiesAttrGroup">
		<xs:attribute name="subscriberId" type="IdType" use="required" />
	</xs:attributeGroup>
</xs:schema>
